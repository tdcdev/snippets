snippet #! "shebang"
#!/usr/bin/env bash
endsnippet

snippet if "if statement"
if [[ ${1:condition} ]]
then
	${VISUAL}${0:${VISUAL/(.*)/(?1::# statements)/}}
fi
endsnippet

snippet elif "else if statement"
elif [[ ${1:condition} ]]
then
	${VISUAL}${0:${VISUAL/(.*)/(?1::# statements)/}}
endsnippet

snippet for "for loop"
for (( ${2:i} = 0; $2 < ${1:count}; $2++ ))
do
	${VISUAL}${0:${VISUAL/(.*)/(?1::# statements)/}}
done
endsnippet

snippet fori "for in loop"
for ${1:needle} in ${2:haystack}
do
	${VISUAL}${0:${VISUAL/(.*)/(?1::# statements)/}}
done
endsnippet

snippet wh "while loop"
while [[ ${1:condition} ]]
do
	${VISUAL}${0:${VISUAL/(.*)/(?1::# statements)/}}
done
endsnippet

snippet until "until loop"
until [[ ${1:condition} ]]
do
	${VISUAL}${0:${VISUAL/(.*)/(?1::# statements)/}}
done
endsnippet

snippet case "case statement"
case ${1:word} in
	${2:pattern})
		${VISUAL}${0:${VISUAL/(.*)/(?1::# statements)/}}
		;;
esac
endsnippet

snippet fun "shell function"
${1:function_name}()
{
	${VISUAL}${0:${VISUAL/(.*)/(?1::# statements)/}}
}
endsnippet

snippet ffun "bash function"
function ${1:function_name}()
{
	${VISUAL}${0:${VISUAL/(.*)/(?1::# statements)/}}
}
endsnippet

snippet sdir "SCRIPT_DIR definition"
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
endsnippet

snippet getopt "usage and getopts"
SCRIPT_NAME=${1:`!p snip.rv = snip.basename or "name"`}
SCRIPT_VERSION=${2:0}

function usage()
{
	cat <<- EOF

Usage: $SCRIPT_NAME [options]

Options:
-h|help       Display this message
-v|version    Display script version

EOF
}

while getopts ":hv" opt
do
	case $opt in
		h|help)
			usage
			exit 0
			;;
		v|version)
			echo "$SCRIPT_NAME version $SCRIPT_VERSION"
			exit 0
			;;
		\?)
			echo "Option does not exist: -$OPTARG"
			usage
			exit 1
			;;
		:)
			echo "Option -$OPTARG requires an argument"
			exit 1
			;;
	esac
done
shift $(($OPTIND-1))

${0:# statements}
endsnippet
